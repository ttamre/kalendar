/**
 * sample_data.sql - populate database with realistic sample data
 *
 * generated by claude sonnet 4
 * 
 * author: Tem Tamre
 * contact: temtamre@gmail.com
 * 
 * This file populates the automotive scheduler database with sample data
 * that follows all constraints defined in init.sql and business requirements.
 * 
 * Schema Constraints:
 * - phone: exactly 10 digits
 * - email: valid format, unique
 * - vin: exactly 17 characters
 * - year: >= 1900
 * - plate: unique
 * - mileage: >= 0
 * - invoice_number: exactly 8 characters
 * - booking_date: checked at application level (can't use non-deterministic values in CHECK in sqlite3)
 * - booking_duration: 1-480 minutes (max 8 hours)
 * - status: booked, on_site, in_progress, completed, cancelled
 * - services: predefined list from init.sql
 * 
 * Business Constraints:
 * - Appointments: June 30 - July 4 (except July 1), 8:00am-5:30pm
 * - No appointments 12pm-1pm (lunch break)
 * - Appointments end by 6pm
 * - Default 30min duration, except: brakes/front end (60-120min), alignment (60min)
 * - 25-100% booked per day
 * - NEW: all appointments must have an attached booking_service (including cancelled appointments)
 * - Service distribution: 20% changeover, 20% swap, 5% balance, 15% rotate, 10% oil change, 15% front end, 15% brakes
 * - Changeover + balance always, 50% + alignment, 25% + oil change
 * - Front end + alignment always
 */

-- ==================
-- SAMPLE DATA
-- ==================

-- CUSTOMERS
-- phone must be exactly 10 digits, email must be unique and valid format
INSERT OR IGNORE INTO customers (phone, name, email) VALUES
('5551234567', 'John Mitchell', 'john.mitchell@email.com'),
('5552345678', 'Sarah Johnson', 'sarah.johnson@gmail.com'),
('5553456789', 'Mike Rodriguez', ''),
('5554567890', 'Emily Chen', 'emily.chen@outlook.com'),
('5555678901', 'David Thompson', 'david.thompson@email.com'),
('5556789012', 'Lisa Wilson', 'lisa.wilson@gmail.com'),
('5557890123', 'Robert Brown', 'robert.brown@yahoo.com'),
('5558901234', 'Jennifer Davis', 'jennifer.davis@outlook.com'),
('5559012345', 'Michael Garcia', 'michael.garcia@email.com'),
('5550123456', 'Amanda Martinez', ''),
('5551357908', 'Chris Anderson', 'chris.anderson@yahoo.com'),
('5552468097', 'Nicole Taylor', 'nicole.taylor@outlook.com'),
('5553691470', 'Kevin White', ''),
('5554702581', 'Rachel Green', 'rachel.green@gmail.com'),
('5555813692', 'Daniel Lee', 'daniel.lee@yahoo.com'),
('5556924703', 'Ashley Clark', 'ashley.clark@outlook.com'),
('5557035814', 'Jason Hall', ''),
('5558146925', 'Melissa Young', 'melissa.young@gmail.com'),
('5559258036', 'Brandon King', 'brandon.king@yahoo.com'),
('5550369147', 'Stephanie Wright', 'stephanie.wright@outlook.com');

-- VEHICLES
-- vin must be exactly 17 chars, phone must reference existing customer, year between 1900 and 2026
-- plate must be unique, mileage >= 0
INSERT OR IGNORE INTO vehicles (vin, phone, year, make, model, plate, mileage) VALUES
('1HGBH41JXMN109186', '5551234567', 2020, 'Honda', 'Civic', 'ABC123', 25000),
('1FTFW1ET5DFC10312', '5552345678', 2019, 'Ford', 'F-150', 'XYZ789', 45000),
('1G1BE5SM7H7123456', '5553456789', 2017, 'Chevrolet', 'Cruze', 'DEF456', 38000),
('3VW467AT8HM123789', '5554567890', 2017, 'Volkswagen', 'Jetta', 'GHI789', 32000),
('1N4AL3AP0HC123456', '5555678901', 2017, 'Nissan', 'Altima', 'JKL012', 41000),
('KMHD14LA2HA123456', '5556789012', 2017, 'Hyundai', 'Elantra', 'MNO345', 29000),
('JM1BK32F781123456', '5557890123', 2008, 'Mazda', 'Mazda3', 'PQR678', 85000),
('1FMCU0F70HUC12345', '5558901234', 2017, 'Ford', 'Escape', 'STU901', 52000),
('5NPE34AF4HH123456', '5559012345', 2017, 'Hyundai', 'Sonata', 'VWX234', 47000),
('2T1BURHE0HC123456', '5550123456', 2017, 'Toyota', 'Corolla', 'YZA567', 35000),
('1C4RJFAG8HC123456', '5551357908', 2017, 'Jeep', 'Cherokee', 'BCD890', 58000),
('3CZRU5H38HM123456', '5552468097', 2017, 'Honda', 'Pilot', 'EFG123', 44000),
('WBAJA7C58HWF12345', '5553691470', 2017, 'BMW', '328i', 'HIJ456', 31000),
('1GKKNPLS8HZ123456', '5554702581', 2017, 'GMC', 'Acadia', 'KLM789', 49000),
('1FMHK8F84HGA12345', '5555813692', 2017, 'Ford', 'Explorer', 'NOP012', 55000),
('KNDJP3A57H7123456', '5556924703', 2017, 'Kia', 'Sorento', 'QRS345', 42000),
('1GCCS14E8H8123456', '5557035814', 2017, 'Chevrolet', 'Silverado', 'TUV678', 63000),
('2C3CDZAG8HH123456', '5558146925', 2017, 'Dodge', 'Charger', 'WXY901', 39000),
('1FA6P8TH7H5123456', '5559258036', 2017, 'Ford', 'Mustang', 'ZAB234', 28000),
('1C6SRFFT8HN123456', '5550369147', 2017, 'Ram', '1500', 'CDE567', 71000);

-- BOOKINGS
-- invoice_number must be exactly 8 chars, vin must reference existing vehicle
-- booking_date: June 30 - July 4 (except July 1), 8:00am-5:30pm, no 12pm-1pm
-- Default 30min duration, except: brakes/front end (60-120min), alignment (60min)
-- 25-100% booked per day

-- June 30, 2025 (Monday) - 85% booked
INSERT OR IGNORE INTO bookings (invoice_number, vin, booking_date, booking_time, booking_duration, status) VALUES
('INV00001', '1HGBH41JXMN109186', '2025-06-30', '08:00', 30, 'completed'),
('INV00002', '1FTFW1ET5DFC10312', '2025-06-30', '08:00', 30, 'completed'),
('INV00003', '1G1BE5SM7H7123456', '2025-06-30', '08:30', 90, 'completed'),
('INV00004', '3VW467AT8HM123789', '2025-06-30', '09:00', 60, 'completed'),
('INV00005', '1N4AL3AP0HC123456', '2025-06-30', '10:00', 30, 'completed'),
('INV00006', 'KMHD14LA2HA123456', '2025-06-30', '10:30', 30, 'cancelled'),
('INV00007', 'JM1BK32F781123456', '2025-06-30', '11:00', 30, 'completed'),
('INV00008', '1FMCU0F70HUC12345', '2025-06-30', '11:30', 30, 'completed'),
('INV00009', '5NPE34AF4HH123456', '2025-06-30', '13:00', 120, 'completed'),
('INV00010', '2T1BURHE0HC123456', '2025-06-30', '13:30', 30, 'completed'),
('INV00011', '1C4RJFAG8HC123456', '2025-06-30', '14:00', 60, 'completed'),
('INV00012', '3CZRU5H38HM123456', '2025-06-30', '15:00', 30, 'completed'),
('INV00013', 'WBAJA7C58HWF12345', '2025-06-30', '15:30', 30, 'completed'),
('INV00014', '1GKKNPLS8HZ123456', '2025-06-30', '16:00', 30, 'completed'),
('INV00015', '1FMHK8F84HGA12345', '2025-06-30', '16:30', 30, 'cancelled'),
('INV00016', 'KNDJP3A57H7123456', '2025-06-30', '17:00', 30, 'completed'),

-- July 2, 2025 (Wednesday) - 90% booked
('INV00017', '1GCCS14E8H8123456', '2025-07-02', '08:00', 30, 'completed'),
('INV00018', '2C3CDZAG8HH123456', '2025-07-02', '08:00', 30, 'completed'),
('INV00019', '1FA6P8TH7H5123456', '2025-07-02', '08:30', 30, 'completed'),
('INV00020', '1C6SRFFT8HN123456', '2025-07-02', '09:00', 60, 'completed'),
('INV00021', '1HGBH41JXMN109186', '2025-07-02', '10:00', 30, 'completed'),
('INV00022', '1FTFW1ET5DFC10312', '2025-07-02', '10:30', 30, 'completed'),
('INV00023', '1G1BE5SM7H7123456', '2025-07-02', '11:00', 90, 'completed'),
('INV00024', '3VW467AT8HM123789', '2025-07-02', '11:30', 30, 'cancelled'),
('INV00025', '1N4AL3AP0HC123456', '2025-07-02', '13:00', 30, 'in_progress'),
('INV00026', 'KMHD14LA2HA123456', '2025-07-02', '13:30', 60, 'in_progress'),
('INV00027', 'JM1BK32F781123456', '2025-07-02', '14:30', 30, 'booked'),
('INV00028', '1FMCU0F70HUC12345', '2025-07-02', '15:00', 30, 'booked'),
('INV00029', '5NPE34AF4HH123456', '2025-07-02', '15:30', 30, 'booked'),
('INV00030', '2T1BURHE0HC123456', '2025-07-02', '16:00', 60, 'booked'),
('INV00031', '1C4RJFAG8HC123456', '2025-07-02', '16:30', 30, 'booked'),
('INV00032', '3CZRU5H38HM123456', '2025-07-02', '17:00', 30, 'booked'),

-- July 3, 2025 (Thursday) - 75% booked
('INV00033', 'WBAJA7C58HWF12345', '2025-07-03', '08:00', 30, 'completed'),
('INV00034', '1GKKNPLS8HZ123456', '2025-07-03', '08:00', 30, 'completed'),
('INV00035', '1FMHK8F84HGA12345', '2025-07-03', '08:30', 90, 'completed'),
('INV00036', 'KNDJP3A57H7123456', '2025-07-03', '09:30', 30, 'completed'),
('INV00037', '1GCCS14E8H8123456', '2025-07-03', '10:00', 30, 'completed'),
('INV00038', '2C3CDZAG8HH123456', '2025-07-03', '10:30', 60, 'completed'),
('INV00039', '1FA6P8TH7H5123456', '2025-07-03', '11:30', 30, 'cancelled'),
('INV00040', '1C6SRFFT8HN123456', '2025-07-03', '13:00', 30, 'in_progress'),
('INV00041', '1HGBH41JXMN109186', '2025-07-03', '13:30', 30, 'booked'),
('INV00042', '1FTFW1ET5DFC10312', '2025-07-03', '14:00', 60, 'booked'),
('INV00043', '1G1BE5SM7H7123456', '2025-07-03', '15:00', 30, 'booked'),
('INV00044', '3VW467AT8HM123789', '2025-07-03', '15:30', 30, 'booked'),
('INV00045', '1N4AL3AP0HC123456', '2025-07-03', '16:00', 30, 'booked'),

-- July 4, 2025 (Friday) - 50% booked (holiday)
('INV00046', 'KMHD14LA2HA123456', '2025-07-04', '08:00', 30, 'completed'),
('INV00047', 'JM1BK32F781123456', '2025-07-04', '08:30', 60, 'completed'),
('INV00048', '1FMCU0F70HUC12345', '2025-07-04', '09:30', 90, 'completed'),
('INV00049', '5NPE34AF4HH123456', '2025-07-04', '11:00', 30, 'cancelled'),
('INV00050', '2T1BURHE0HC123456', '2025-07-04', '13:30', 30, 'booked'),
('INV00051', '1C4RJFAG8HC123456', '2025-07-04', '14:00', 60, 'booked'),
('INV00052', '3CZRU5H38HM123456', '2025-07-04', '15:00', 30, 'booked'),
('INV00053', 'WBAJA7C58HWF12345', '2025-07-04', '15:30', 30, 'booked');

-- BOOKING SERVICES
-- Service distribution: 20% changeover, 20% swap, 5% balance, 15% rotate, 10% oil change, 15% front end, 15% brakes
-- Changeover + balance always, 50% + alignment, 25% + oil change
-- Front end + alignment always
-- Total appointments: 53 (excluding cancelled)

INSERT OR IGNORE INTO booking_services (invoice_number, service_name) VALUES
-- June 30 services (16 appointments, 2 cancelled)
-- 20% changeover = 3 appointments
('INV00001', 'changeover'), ('INV00001', 'balance'),
('INV00007', 'changeover'), ('INV00007', 'balance'), ('INV00007', 'alignment'),
('INV00014', 'changeover'), ('INV00014', 'balance'), ('INV00014', 'oil change'),

-- 20% swap = 3 appointments  
('INV00002', 'swap'),
('INV00010', 'swap'), 
('INV00016', 'swap'),

-- 10% balance = 1 standalone
('INV00006', 'balance'),
('INV00008', 'balance'),

-- 15% rotate = 2 appointments
('INV00005', 'rotate'),
('INV00012', 'rotate'),

-- 10% oil change = 2 appointments
('INV00004', 'oil change'),
('INV00013', 'oil change'),

-- 15% front end = 2 appointments (+ alignment always)
('INV00003', 'front end'), ('INV00003', 'alignment'),
('INV00009', 'front end'), ('INV00009', 'alignment'),

-- 15% brakes = 2 appointments
('INV00011', 'brakes'),
('INV00015', 'rotate'),

-- July 2 services (16 appointments, 1 cancelled)
-- 20% changeover = 3 appointments
('INV00017', 'changeover'), ('INV00017', 'balance'),
('INV00021', 'changeover'), ('INV00021', 'balance'), ('INV00021', 'alignment'),
('INV00028', 'changeover'), ('INV00028', 'balance'), ('INV00028', 'oil change'),

-- 20% swap = 3 appointments
('INV00018', 'swap'),
('INV00025', 'swap'),
('INV00031', 'swap'),

-- 5% balance = 1 standalone
('INV00029', 'balance'),

-- 15% rotate = 2 appointments
('INV00022', 'rotate'),
('INV00027', 'rotate'),

-- 10% oil change = 2 appointments
('INV00019', 'oil change'),
('INV00032', 'oil change'),

-- 15% front end = 2 appointments (+ alignment always)
('INV00020', 'front end'), ('INV00020', 'alignment'),
('INV00023', 'front end'), ('INV00023', 'alignment'),

-- 15% brakes = 2 appointments
('INV00026', 'brakes'),
('INV00030', 'brakes'),
('INV00024', 'brakes'),

-- July 3 services (13 appointments, 1 cancelled)
-- 20% changeover = 3 appointments
('INV00033', 'changeover'), ('INV00033', 'balance'),
('INV00037', 'changeover'), ('INV00037', 'balance'), ('INV00037', 'alignment'),
('INV00043', 'changeover'), ('INV00043', 'balance'), ('INV00043', 'oil change'),

-- 20% swap = 3 appointments
('INV00034', 'swap'),
('INV00041', 'swap'),
('INV00044', 'swap'),

-- 5% balance = 1 standalone
('INV00040', 'balance'),

-- 15% rotate = 2 appointments
('INV00036', 'rotate'),
('INV00045', 'rotate'),

-- 10% oil change = 1 appointment
('INV00042', 'oil change'),

-- 15% front end = 2 appointments (+ alignment always)
('INV00035', 'front end'), ('INV00035', 'alignment'),
('INV00038', 'front end'), ('INV00038', 'alignment'),

-- 15% brakes = 1 appointment
('INV00039', 'oil change'),

-- July 4 services (8 appointments, 1 cancelled)
-- 20% changeover = 2 appointments
('INV00046', 'changeover'), ('INV00046', 'balance'),
('INV00051', 'changeover'), ('INV00051', 'balance'), ('INV00051', 'alignment'),

-- 20% swap = 1 appointment
('INV00050', 'swap'),

-- 5% balance = 1 standalone
('INV00052', 'balance'),

-- 15% rotate = 1 appointment
('INV00053', 'rotate'),

-- 10% oil change = 1 appointment
-- (included with changeover above)

-- 15% front end = 1 appointment (+ alignment always)
('INV00047', 'front end'), ('INV00047', 'alignment'),

-- 15% brakes = 1 appointment
('INV00048', 'brakes'),
('INV00049', 'front end'), ('INV00049', 'alignment')

-- ==================
-- VERIFICATION QUERIES
-- ==================

-- Uncomment these queries to verify data integrity after insertion:

-- Check customer count
-- SELECT COUNT(*) as customer_count FROM customers;

-- Check vehicle-customer relationships
-- SELECT c.name, c.phone, v.year, v.make, v.model FROM customers c 
-- JOIN vehicles v ON c.phone = v.phone ORDER BY c.name;

-- Check schedule for specific dates
-- SELECT * FROM schedule WHERE booking_date = '2025-06-30' ORDER BY booking_time;
-- SELECT * FROM schedule WHERE booking_date = '2025-07-02' ORDER BY booking_time;

-- Check service distribution
-- SELECT service, COUNT(*) as count, 
--        ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM booking_services), 1) as percentage
-- FROM booking_services GROUP BY service ORDER BY count DESC;

-- Check booking status distribution
-- SELECT status, COUNT(*) as count FROM bookings GROUP BY status;

-- Test the views
-- SELECT * FROM schedule ORDER BY booking_date, booking_time;
-- SELECT * FROM detailed_view WHERE booking_date >= '2025-06-30' ORDER BY booking_date;
-- SELECT * FROM service_stats;

-- Check business constraints compliance
-- SELECT 'No lunch appointments' as check_type, COUNT(*) as violations 
-- FROM bookings WHERE TIME(booking_time) BETWEEN '12:00' AND '13:00';

-- SELECT 'Appointments end by 6pm' as check_type, COUNT(*) as violations
-- FROM bookings WHERE TIME(booking_time, '+' || booking_duration || ' minutes') > '18:00';

-- SELECT 'Service combinations' as check_type, 
--        COUNT(*) as changeover_with_balance
-- FROM booking_services bs1 
-- JOIN booking_services bs2 ON bs1.invoice_number = bs2.invoice_number 
-- WHERE bs1.service = 'changeover' AND bs2.service = 'balance';

-- SELECT 'Front end with alignment' as check_type,
--        COUNT(*) as front_end_with_alignment  
-- FROM booking_services bs1
-- JOIN booking_services bs2 ON bs1.invoice_number = bs2.invoice_number
-- WHERE bs1.service = 'front end' AND bs2.service = 'alignment';
